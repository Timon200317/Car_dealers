version: '3.8'

services:

  db:
    container_name: postgres_db_cars
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./docker.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DB_PORT}
    expose:
      - "5432"
    ports:
      - "5432:5432"
    restart: "always"

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: car_dealers
    volumes:
      - static:/static
    env_file:
      - ./docker.env
    expose:
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: "always"

  redis:
    image: redis:7.0.5-alpine
    ports:
      - "6379:6379"

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A djangoTask.config.celery worker --loglevel=info
    volumes:
      - .:/usr/src/app/
    links:
      - redis
    depends_on:
      - redis
      - db
      - web
    env_file:
      - ./docker.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DB_PORT}

  beat:
    build:
      context: .
    hostname: beat
    entrypoint: celery
    command: -A djangoTask.config.celery beat --loglevel=info
    volumes:
      - .:/usr/src/app/
    links:
      - redis
    depends_on:
      - worker
    env_file:
      - ./docker.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DB_PORT}

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A djangoTask.config.celery flower
    volumes:
      - .:/usr/src/app/
    links:
      - redis
    depends_on:
      - web
      - worker
      - redis
    ports:
      - "5555:5555"

  nginx:
    build: ./nginx
    volumes:
      - static:/static
    ports:
      - "80:80"
    depends_on:
      - web


volumes:
  postgres_data:
    driver: local
  static: